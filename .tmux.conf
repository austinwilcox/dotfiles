# \__    ___/_____   __ __ ___  ___    \_   ___ \   ____    ____ _/ ____\|__|  / ___\          
#   |    |  /     \ |  |  \\  \/  /    /    \  \/  /  _ \  /    \\   __\ |  | / /_/  >         
#   |    | |  Y Y  \|  |  / >    <     \     \____(  <_> )|   |  \|  |   |  | \___  /          
#   |____| |__|_|  /|____/ /__/\_ \     \______  / \____/ |___|  /|__|   |__|/_____/           
#                \/              \/            \/              \/                              
                                                                                                                                                                                      
# Useful Keybindings to remember
# 1. prefix ! - turns a pane into a new window
# 2. prefix ( - moves you to a previous session
# 3. prefix ) - moves you to the next session
# 4. prefix s - shows all active sessions
# 5. tmux move-window -s sessionOneName:1 -t sessionTwoName - This moves window 1 from sessionOneName into sessionTwoName
# 6. Check if tmux has active session with bash
# if ! tmux has-session -t development; then
#   exec tmux new-session -s development -d
# fi
# exec tmux attach -t development


#Set prefix from C-b to C-a
set -g prefix C-a
unbind C-b

#This will allow me to send C-a down to vim if I need to by pressing the combo twice
bind C-a send-prefix

#Setting the delay between the prefix and command
#If I toggle this to shorter it interferes with vim commands
set -sg escape-time 10

# Start the counting of windows at 1 instead of 0, which is the default
set -g base-index 1

# Start the counting of panes at 1 instead of 0, which is the default
setw -g pane-base-index 1

# Vertical Split panes in tmux
bind | split-window -h
# Horizontal Split panes in tmux
bind - split-window -v

# Remap moving panes to Vim keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Allow the mouse to scroll and select windows/panes
set -g mouse off

# Reload the tmux config
bind r source-file ~/.tmux.conf \; display "Tmux has been Reloaded!"

# Set the default terminal colors to use 256
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# set-option -g status on
# set-option -g status-interval 2
# set-option -g status-justify "centre"
# set-option -g status-left-length 80
# set-option -g status-right-length 90
# set-option -g status-left "#(~/Software/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/Software/tmux-powerline/powerline.sh right)"
# set-hook -g session-created 'run-shell "~/path/to/tmux-powerline/powerline.sh init"' # prettifies the window-status segments

# Background color is black, and font color is Arbinger Blue
set -g status-style 'bg=black fg=#00a6e2'
# Set the color of the window list
setw -g window-status-style fg=#00a6e2,bg=black
# Set the color of the active window in the list
setw -g window-status-current-style fg=white,bold,bg=red

# Set colors for panes
# setw -g pane-border-style fg=green,bg=black
# setw -g pane-active-border-style fg=white,bg=yellow

# active pane is normal, others are shaded out
setw -g window-style fg=colour240,bg=colour235
setw -g window-active-style fg=white,bg=black

# Command/Message line
set -g message-style fg=white,bold,bg=black

# Status line left side to show Session:window:pane
set -g status-left-length 40
set -g status-left "#[fg=green]S:#S #[fg=yellow]W:#I #[fg=cyan]P:#P "

# Status line right side - 31-oct 13:37
set -g status-right ""

setw -g mode-keys vi

# Tmux copy and paste to vim keybindings
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection

# p by default is for previous window, but I never use that command so unbinding it is fine by my me. I am now binding it to paste the tmux buffer at 0
unbind p
bind p paste-buffer

# use xclip to get my text in the current buffer to the global clipboard
bind C-c run "tmux save-buffer - | xclip -sel clip -i"

# Options
# List of plugins
# tmux-prefix I (capital I - to fetch the plugin and install it)
set -g @plugin 'tmux-plugins/tpm'

# This has to be the last line
run '~/.tmux/plugins/tpm/tpm'
